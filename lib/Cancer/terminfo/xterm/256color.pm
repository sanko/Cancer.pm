package Cancer::terminfo::xterm::256color {
    use strictures 2;
    use Data::Dump;
    use Fcntl qw[O_RDWR O_NDELAY O_NOCTTY];
    use POSIX qw[:termios_h];
    use IPC::Open2;
    #
    use Moo::Role;
    use Types::Standard qw[Bool Enum HashRef FileHandle InstanceOf Int Num Str];
    use experimental 'signatures';
    use Role::Tiny qw[];
    use PerlX::Define;
    with 'Cancer::terminfo::xterm';

    sub blah($s) {
        warn 'BLAH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!';
    }
    define Name        => 'xterm-256color';
    define Columns     => 80;
    define Lines       => 24;
    define Colors      => 256;
    define Bell        => "\a";
    define Clear       => "\x1b[H\x1b[2J";
    define EnterCA     => "\x1b[?1049h\x1b[22;0;0t";
    define ExitCA      => "\x1b[?1049l\x1b[23;0;0t";
    define ShowCursor  => "\x1b[?12l\x1b[?25h";
    define HideCursor  => "\x1b[?25l";
    define AttrOff     => "\x1b(B\x1b[m";
    define Underline   => "\x1b[4m";
    define Bold        => "\x1b[1m";
    define Dim         => "\x1b[2m";
    define Blink       => "\x1b[5m";
    define Reverse     => "\x1b[7m";
    define EnterKeypad => "\x1b[?1h\x1b=";
    define ExitKeypad  => "\x1b[?1l\x1b>";
    define SetFg       => "\x1b[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m";
    define SetBg       => "\x1b[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m";
    define SetFgBg =>
        "\x1b[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;;%?%p2%{8}%<%t4%p2%d%e%p2%{16}%<%t10%p2%{8}%-%d%e48;5;%p2%d%;m";
    define AltChars => "``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~";
    define EnterAcs => "\x1b(0";
    define ExitAcs  => "\x1b(B";
    define Mouse    => "\x1b[M";
    define MouseMode =>
        "%?%p1%{1}%=%t%'h'%Pa%e%'l'%Pa%;\x1b[?1000%ga%c\x1b[?1002%ga%c\x1b[?1003%ga%c\x1b[?1006%ga%c";
    define SetCursor       => "\x1b[%d;%dH";
    define CursorBack1     => "\b";
    define CursorUp1       => "\x1b[A";
    define KeyUp           => "\x1bOA";
    define KeyDown         => "\x1bOB";
    define KeyRight        => "\x1bOC";
    define KeyLeft         => "\x1bOD";
    define KeyInsert       => "\x1b[2~";
    define KeyDelete       => "\x1b[3~";
    define KeyBackspace    => "\u007f";
    define KeyHome         => "\x1bOH";
    define KeyEnd          => "\x1bOF";
    define KeyPgUp         => "\x1b[5~";
    define KeyPgDn         => "\x1b[6~";
    define KeyF1           => "\x1bOP";
    define KeyF2           => "\x1bOQ";
    define KeyF3           => "\x1bOR";
    define KeyF4           => "\x1bOS";
    define KeyF5           => "\x1b[15~";
    define KeyF6           => "\x1b[17~";
    define KeyF7           => "\x1b[18~";
    define KeyF8           => "\x1b[19~";
    define KeyF9           => "\x1b[20~";
    define KeyF10          => "\x1b[21~";
    define KeyF11          => "\x1b[23~";
    define KeyF12          => "\x1b[24~";
    define KeyF13          => "\x1b[1;2P";
    define KeyF14          => "\x1b[1;2Q";
    define KeyF15          => "\x1b[1;2R";
    define KeyF16          => "\x1b[1;2S";
    define KeyF17          => "\x1b[15;2~";
    define KeyF18          => "\x1b[17;2~";
    define KeyF19          => "\x1b[18;2~";
    define KeyF20          => "\x1b[19;2~";
    define KeyF21          => "\x1b[20;2~";
    define KeyF22          => "\x1b[21;2~";
    define KeyF23          => "\x1b[23;2~";
    define KeyF24          => "\x1b[24;2~";
    define KeyF25          => "\x1b[1;5P";
    define KeyF26          => "\x1b[1;5Q";
    define KeyF27          => "\x1b[1;5R";
    define KeyF28          => "\x1b[1;5S";
    define KeyF29          => "\x1b[15;5~";
    define KeyF30          => "\x1b[17;5~";
    define KeyF31          => "\x1b[18;5~";
    define KeyF32          => "\x1b[19;5~";
    define KeyF33          => "\x1b[20;5~";
    define KeyF34          => "\x1b[21;5~";
    define KeyF35          => "\x1b[23;5~";
    define KeyF36          => "\x1b[24;5~";
    define KeyF37          => "\x1b[1;6P";
    define KeyF38          => "\x1b[1;6Q";
    define KeyF39          => "\x1b[1;6R";
    define KeyF40          => "\x1b[1;6S";
    define KeyF41          => "\x1b[15;6~";
    define KeyF42          => "\x1b[17;6~";
    define KeyF43          => "\x1b[18;6~";
    define KeyF44          => "\x1b[19;6~";
    define KeyF45          => "\x1b[20;6~";
    define KeyF46          => "\x1b[21;6~";
    define KeyF47          => "\x1b[23;6~";
    define KeyF48          => "\x1b[24;6~";
    define KeyF49          => "\x1b[1;3P";
    define KeyF50          => "\x1b[1;3Q";
    define KeyF51          => "\x1b[1;3R";
    define KeyF52          => "\x1b[1;3S";
    define KeyF53          => "\x1b[15;3~";
    define KeyF54          => "\x1b[17;3~";
    define KeyF55          => "\x1b[18;3~";
    define KeyF56          => "\x1b[19;3~";
    define KeyF57          => "\x1b[20;3~";
    define KeyF58          => "\x1b[21;3~";
    define KeyF59          => "\x1b[23;3~";
    define KeyF60          => "\x1b[24;3~";
    define KeyF61          => "\x1b[1;4P";
    define KeyF62          => "\x1b[1;4Q";
    define KeyF63          => "\x1b[1;4R";
    define KeyBacktab      => "\x1b[Z";
    define KeyShfLeft      => "\x1b[1;2D";
    define KeyShfRight     => "\x1b[1;2C";
    define KeyShfUp        => "\x1b[1;2A";
    define KeyShfDown      => "\x1b[1;2B";
    define KeyCtrlLeft     => "\x1b[1;5D";
    define KeyCtrlRight    => "\x1b[1;5C";
    define KeyCtrlUp       => "\x1b[1;5A";
    define KeyCtrlDown     => "\x1b[1;5B";
    define KeyMetaLeft     => "\x1b[1;9D";
    define KeyMetaRight    => "\x1b[1;9C";
    define KeyMetaUp       => "\x1b[1;9A";
    define KeyMetaDown     => "\x1b[1;9B";
    define KeyAltLeft      => "\x1b[1;3D";
    define KeyAltRight     => "\x1b[1;3C";
    define KeyAltUp        => "\x1b[1;3A";
    define KeyAltDown      => "\x1b[1;3B";
    define KeyAltShfLeft   => "\x1b[1;4D";
    define KeyAltShfRight  => "\x1b[1;4C";
    define KeyAltShfUp     => "\x1b[1;4A";
    define KeyAltShfDown   => "\x1b[1;4B";
    define KeyMetaShfLeft  => "\x1b[1;10D";
    define KeyMetaShfRight => "\x1b[1;10C";
    define KeyMetaShfUp    => "\x1b[1;10A";
    define KeyMetaShfDown  => "\x1b[1;10B";
    define KeyCtrlShfLeft  => "\x1b[1;6D";
    define KeyCtrlShfRight => "\x1b[1;6C";
    define KeyCtrlShfUp    => "\x1b[1;6A";
    define KeyCtrlShfDown  => "\x1b[1;6B";
    define KeyShfHome      => "\x1b[1;2H";
    define KeyShfEnd       => "\x1b[1;2F";
    define KeyCtrlHome     => "\x1b[1;5H";
    define KeyCtrlEnd      => "\x1b[1;5F";
    define KeyAltHome      => "\x1b[1;9H";
    define KeyAltEnd       => "\x1b[1;9F";
    define KeyCtrlShfHome  => "\x1b[1;6H";
    define KeyCtrlShfEnd   => "\x1b[1;6F";
    define KeyMetaShfHome  => "\x1b[1;10H";
    define KeyMetaShfEnd   => "\x1b[1;10F";
    define KeyAltShfHome   => "\x1b[1;4H";
    define KeyAltShfEnd    => "\x1b[1;4F";
}
1;
